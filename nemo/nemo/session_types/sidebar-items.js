initSidebarItems({"struct":[["Eps","The session is at the end of communication. The channel can now be gracefully closed."],["Escape","Escape from a nested scope by an arbitrary number of layers `N`, using peano numbers."],["Nest","Protocols ocassionally do not follow a linear path of behavior. It may be necessary to return to a previous \"state\" in the protocol. However, this cannot be expressed in the typesystem, because the type will fold over itself infinitely. Instead, `Nest<S>` and `Escape<N>` are provided. These types allow you to \"break\" out of a nested scope in the protocol by an arbitrary number of layers `N`."],["Recv","The session expects to receive `T` and proceed to session `S`."],["Send","The session expects to send `T` and proceed to session `S`."]],"trait":[["SessionType","All session types have duality. Two clients that communicate will always have a session type that is the dual of their counterpart."]]});